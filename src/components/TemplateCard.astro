---
import type { Template } from '../data/templates';

interface Props {
  template: Template;
}

const { template } = Astro.props;
---

<article class="group relative bg-white rounded-2xl shadow-lg overflow-hidden transition-all duration-300 hover:shadow-2xl hover:-translate-y-1">
  <div class="aspect-video overflow-hidden bg-gradient-to-br from-gray-100 to-gray-200">
    <img 
      src={template.thumbnail} 
      alt={template.title}
      class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
      loading="lazy"
    />
    <div class="absolute top-4 right-4">
      <span class="px-3 py-1 bg-white/90 backdrop-blur-sm rounded-full text-sm font-medium text-gray-700">
        {template.category}
      </span>
    </div>
  </div>
  
  <div class="p-4 sm:p-6">
    <h3 class="text-lg sm:text-xl font-bold text-gray-900 mb-2 group-hover:text-blue-600 transition-colors">
      {template.title}
    </h3>
    
    <p class="text-sm sm:text-base text-gray-600 mb-4 line-clamp-2">
      {template.description}
    </p>
    
    <div class="flex flex-wrap gap-2 mb-4">
      {template.technologies.slice(0, 3).map((tech) => (
        <span class="px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded-md">
          {tech}
        </span>
      ))}
      {template.technologies.length > 3 && (
        <span class="px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded-md">
          +{template.technologies.length - 3}
        </span>
      )}
    </div>
    
    <div class="flex items-center justify-between pt-4 border-t border-gray-100">
      {template.price && (
        <span class="text-base sm:text-lg font-semibold text-gray-900">
          {template.price}
        </span>
      )}
      
      <div class="flex gap-2 ml-auto">
        <a 
          href={`/template/${template.id}`}
          class="px-3 sm:px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-xs sm:text-sm font-medium"
        >
          Ver Detalles
        </a>
        {(template.liveUrl || template.githubUrl) && (
          <a 
            href={template.liveUrl || template.githubUrl}
            class="px-3 sm:px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors text-xs sm:text-sm font-medium"
            target="_blank"
            rel="noopener noreferrer"
          >
            <svg class="w-4 h-4 inline-block mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
            </svg>
            Demo
          </a>
        )}
      </div>
    </div>
  </div>
</article>